## Copyright (c) 2023, Oracle and/or its affiliates.
## All rights reserved. The Universal Permissive License (UPL), Version 1.0 as shown at http://oss.oracle.com/licenses/upl

# This deployment spec is custom tailored fit for the Helidon version 4 MP OCI template generated via the Helidon Archetype
version: 1.0
component: deployment
shell: bash
files:
  - source: /
    destination: /tmp/
steps:
  - stepType: Command
    name: Install OCI CLI if does not exist
    command: |
      export PATH=${PATH}:~/.local/bin/
      oci > /dev/null 2>&1 
      if [ $? -ne 0 ]; then 
        cd ~ 
        python3 -m pip install --quiet --user oci-cli && echo "oci cli installed successfully"
      fi
    timeoutInSeconds: 5000
  - stepType: Command
    name: Install JDK 21 if it does not exist
    command: |
      # Go to home directory (/var/lib/ocarun)
      cd ~
      JDK21_TAR_GZ_INSTALLER_BASE=$(basename ${JDK21_TAR_GZ_INSTALLER})
      # If jdk installer does not exist yet, download and install it
      ls ${JDK21_TAR_GZ_INSTALLER_BASE}
      if [ $? -ne 0 ]; then 
        rm -f *jdk*.tar.gz
        rm -rf jdk*
        wget -q ${JDK21_TAR_GZ_INSTALLER} && echo "JDK21 downloaded successfully"
        tar xzf ${JDK21_TAR_GZ_INSTALLER_BASE} && echo "JDK21 installed successfully"
      fi
    timeoutInSeconds: 5000
  - stepType: Command
    name: Terminate Helidon app if it is already running
    command: |
      pid=$(ps -fe | grep ${HELIDON_APP_NAME} | grep -v grep | awk '{print $2}')
      if [ ! -z "$pid" ]; then 
        kill -9 $pid
      fi
  - stepType: Command
    name: Download Helidon app artifact and set it up
    command: |
      # Go to home directory (/var/lib/ocarun)
      cd ~
      
      # Set necessary environment variables
      export OCI_CLI_AUTH=instance_principal
      export PATH=${PATH}:~/.local/bin/
      
      # Download application artifact
      oci artifacts generic artifact download-by-path --repository-id ${ARTIFACT_REPO_OCID} --artifact-path ${ARTIFACT_NAME} --artifact-version ${BUILDRUN_HASH} --file ${ARTIFACT_NAME}
      
      # Extract the artifact
      tar -xzf ${ARTIFACT_NAME}
    timeoutInSeconds: 5000
  - stepType: Command
    name: Run Helidon app in the background
    command: |
      # Go to home directory (/var/lib/ocarun)
      cd ~      
      # Add JDK bin to ${PATH} 
      PATH=$(ls -d `pwd`/jdk*/)bin:$PATH
      echo "PATH=${PATH}"
      
      # Display java version
      java --version
      
      # Run the app in the background
      rm -f helidon-app.log
      java --enable-preview -jar ${HELIDON_APP_NAME} &> helidon-app.log &
      
      # Check if Helidon is ready in 60 seconds using the readiness healthcheck endpoint of the app.
      TIMEOUT_SEC=60
      start_time="$(date -u +%s)"
      while true; do
        curl -s http://localhost:8080/health/ready | grep -q '"status":"UP"'
        if [ $? -eq 0 ]; then
          echo "Helidon app is now running! Printing the logs..."
          cat helidon-app.log
          break
        fi
        current_time="$(date -u +%s)"
        elapsed_seconds=$(($current_time-$start_time))
        if [ $elapsed_seconds -gt $TIMEOUT_SEC ]; then
          echo "Error: Helidon app failed to run successfully. Printing the logs..."
          cat helidon-app.log
          exit 1
        fi
        sleep 1
      done
    timeoutInSeconds: 300
